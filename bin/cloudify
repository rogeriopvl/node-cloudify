#!/usr/bin/env node

var argv = require('minimist')(process.argv.slice(2), {
    string: ['name', 'n'],
    boolean: ['download', 'help', 'version', 'test'],
    alias: { d: 'download', n: 'name', v: 'version', h: 'help' }
});

var config = require('../lib/config.js')();

// --test is an undocumented hack flag to allow to run tests without a config file
if (!config.data.oauth.token && !argv.test) {
    require('../lib/setup.js')();
}
else {
    startup(argv);
}

function startup(argv) {
    var files = argv._;

    if (argv.help) {
        showHelp();
    }
    else if (argv.version) {
        showVersion();
    }
    else {
        if (files.length < 1){
            showHelp();
            process.exit(-1);
        }

        var fs = require('fs');
        var options = { download: argv.download, name: argv.name || false };

        if (fs.existsSync(files[0]) && !fs.lstatSync(files[0]).isDirectory()) {
            var cloudify = require('../lib/cloudify.js')(config.data, files[0], options);
            cloudify();
        }
        else {
            console.log('File does not exists or is a directory');
        }
    }
}

function showHelp() {
    console.log('Usage: cloudify [options] <file_to_share>');
    console.log('');
    console.log('Options:');
    console.log('\t-d | --download  (optional) get direct link to file, instead of preview link');
    console.log('\t-n | --name (optional) save the file with a custom filename');
}

function showVersion() {
    var meta = require('../package.json');
    console.log('cloudify version v' + meta.version);
}
